name: D√©ploiement CI/CD de l'application Node.js sur EC2

on:
  push:
    branches:
      - main # D√©clencher ce workflow √† chaque 'push' sur la branche principale

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    
    # 1. R√©cup√©ration du code
    - name: üì¶ R√©cup√©ration du Code
      uses: actions/checkout@v4
      
    # 2. Configuration de l'environnement Node.js
    - name: ‚öôÔ∏è Configuration de Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20' # Assurez-vous d'utiliser la bonne version
        
    # 3. Installation des d√©pendances et Build (Ex√©cut√© sur GitHub)
    - name: üèóÔ∏è Installation et Construction du Projet
      run: |
        npm install
        npm run build 
        
    # --- D√©ploiement vers EC2 ---

    # 4. Transfert des Fichiers (SCP - Secure Copy)
    # Cette action copie tous les fichiers, y compris le dossier 'build', vers l'EC2.
    - name: üíæ Transfert des Fichiers (SCP)
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "." # Transf√©rer tout le contenu du r√©pertoire courant GitHub
        target: "/home/${{ secrets.EC2_USER }}/myapp" # Cible sur l'instance EC2
        
    # 5. Red√©marrage de l'Application (SSH - Remote Command)
    # Cette action ex√©cute les commandes sur l'EC2 pour mettre √† jour l'application.
    - name: üîÑ Red√©marrage de l'Application (SSH)
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          APP_DIR="/home/${{ secrets.EC2_USER }}/myapp" 
          cd $APP_DIR
          
          echo "Dossier actuel : $PWD"
          
          # Mise √† jour et red√©marrage de l'application via PM2
          # Utilise 'reload' pour un red√©marrage doux si l'app existe, sinon 'start'
          pm2 reload my-node-app || pm2 start npm --name "my-node-app" -- start
          
          # Enregistrer l'√©tat de PM2 pour qu'il red√©marre apr√®s un reboot de l'EC2
          pm2 save